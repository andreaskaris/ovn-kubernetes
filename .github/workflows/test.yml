name: ovn-ci

on:
  push:
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 */12 * * *'

env:
  GO_VERSION: "1.17.6"
  K8S_VERSION: v1.23.3
  KIND_CLUSTER_NAME: ovn
  KIND_INSTALL_INGRESS: true
  KIND_ALLOW_SYSTEM_WRITES: true
  # This skips tests tagged as Serial
  # Current Serial tests are not relevant for OVN
  PARALLEL: true

  # This must be a directory
  CI_IMAGE_CACHE: /tmp/image_cache/
  # This must be a directory
  CI_RUN_LOG_CACHE: /tmp/run_logs/
  # This must be a file
  CI_LAST_RUN_STATUS_CACHE: /tmp/last_run_status

  CI_IMAGE_MASTER_TAR: image-master.tar
  CI_IMAGE_PR_TAR: image-pr.tar
  CI_DIST_IMAGES_OUTPUT: dist/images/_output/

  CI_LOGS_OVN_UPGRADE: logs_ovn_upgrade.txt
  CI_LOGS_SHARD_CONFORMANCE: logs_shard_conformance.txt
  CI_LOGS_GENERIC: logs.txt
  CI_LOGS_DUAL_STACK: dual_stack_logs.txt
  CI_LOGS_SINGLE_STACK: single_stack_logs.txt

jobs:
  # separate job for parallelism
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    # Create a cache for the built master image
    - name: Restore master image cache
      id: image_cache_master
      run: |
        r=$((1 + $RANDOM % 10))
        if [ $r -le 5 ]; then 
          echo failed
          exit 1
        fi
        echo success
      
  build-master:
    name: Build-master
    runs-on: ubuntu-latest
    steps:
    # Create a cache for the built master image
    - name: Restore master image cache
      id: image_cache_master
      run: |
        r=$((1 + $RANDOM % 10))
        if [ $r -le 5 ]; then 
          echo failed
          exit 1
        fi
        echo success
  
    - name: Check if master image build is needed
      id: is_master_image_build_needed
      continue-on-error: false
      run: |
        r=$((1 + $RANDOM % 10))
        if [ $r -le 5 ]; then 
          echo failed
          exit 1
        fi
        echo success
